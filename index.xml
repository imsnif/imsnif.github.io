<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hi there! on poor.dev</title>
    <link>https://www.poor.dev/</link>
    <description>Recent content in Hi there! on poor.dev</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 02 Nov 2021 09:00:00 +0200</lastBuildDate><atom:link href="https://www.poor.dev/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Anatomy of a Terminal Emulator</title>
      <link>https://www.poor.dev/terminal-anatomy/</link>
      <pubDate>Tue, 02 Nov 2021 09:00:00 +0200</pubDate>
      
      <guid>https://www.poor.dev/terminal-anatomy/</guid>
      <description>The terminal emulator as a platform for development. Understanding the nitty-gritty, writing some Rust examples and learning how to cause a small bit of mischief.</description>
    </item>
    
    <item>
      <title>Anatomy of a Terminal Emulator</title>
      <link>https://www.poor.dev/blog/terminal-anatomy/</link>
      <pubDate>Tue, 02 Nov 2021 09:00:00 +0200</pubDate>
      
      <guid>https://www.poor.dev/blog/terminal-anatomy/</guid>
      <description>The terminal emulator as a platform for development. Understanding the nitty-gritty, writing some Rust examples and learning how to cause a small bit of mischief.</description>
    </item>
    
    <item>
      <title>How we improved the performance of our Rust app</title>
      <link>https://www.poor.dev/blog/performance/</link>
      <pubDate>Mon, 19 Jul 2021 09:00:00 +0200</pubDate>
      
      <guid>https://www.poor.dev/blog/performance/</guid>
      <description>A writeup of our journey to improve the performance of Zellij</description>
    </item>
    
    <item>
      <title>Implementing a job queue in Rust</title>
      <link>https://www.poor.dev/blog/what-job-queue/</link>
      <pubDate>Wed, 30 Oct 2019 20:00:00 +0200</pubDate>
      
      <guid>https://www.poor.dev/blog/what-job-queue/</guid>
      <description>I recently finished my first rust project - a command line utility called &amp;ldquo;bandwhich&amp;rdquo; that displays network utilization information. As a newcomer to rust, this project offered quite some challenges for me. This post is a write up of one of them, going into detail on the parts that I personally found most difficult to understand. I hope it will be the first of many. If you&amp;rsquo;d like to check out the utility itself and browse its source, you can find it here</description>
    </item>
    
    <item>
      <title>External work</title>
      <link>https://www.poor.dev/external_work/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.poor.dev/external_work/</guid>
      <description># A talk I gave at Rust Linz Here&amp;rsquo;s a recording of a talk I gave at the virtual Rust Linz meetup. The talk is about Zellij (then called Mosaic).
# Adding package-lock.json support to yarn Back when I worked a lot in the javascript space, I thought it would be great if the then two major package managers supported each other&amp;rsquo;s lockfile format. This is a post I wrote after implementing support for npm&amp;rsquo;s package-lock.</description>
    </item>
    
    <item>
      <title>Projects</title>
      <link>https://www.poor.dev/projects/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.poor.dev/projects/</guid>
      <description># bandwhich 
Bandwhich was my first major Rust project. My main goal with it was to create a tool that would be trivial to use, providing useful information for network veterans and novice computer users alike.
My favorite feature about it is that the UI changes when the user expands their terminal window: showing more information (additional tables and additional columns in each table) if there&amp;rsquo;s enough room for it.</description>
    </item>
    
  </channel>
</rss>
